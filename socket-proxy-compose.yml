# -----------------------------------------------------------------
# This should not be employed as a single container, but rather as
# containers inside of existent stacks. It just exists here to
# serve as an example container and how it can be added to a stack.
#
# When implementing this, replace `<name>` with the container name.
# The port will also need modified since one port can't be occupied
# by multiple containers. Finally, modify the `<TODO>` in the 
# network specs to iterate on that as well. As stated there, allow
# it in the firewall as well to ensure it works properly.
# -----------------------------------------------------------------

services:
  <name>-socket-proxy:
    container_name: <name>-socket-proxy
    image: tecnativa/docker-socket-proxy
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    networks: # uses the socket proxy network
      - <name>_socket_proxy
    privileged: true
    ports:
      - <TODO>:2375 # after setting this, be sure to add it to the firewall allow/deny rules
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - LOG_LEVEL=info
      ## These should all be specified according to the needs. Some values are displayed below for examples.
      ## Variables match the URL prefix (i.e. AUTH blocks access to /auth/* parts of the API, etc.).
      ## Granted by Default
      - EVENTS=1
      - PING=1
      - VERSION=1
      ## Revoked by Default
      # Security critical
      - AUTH=0
      - SECRETS=0
      - POST=1 # Watchtower
      # Not always needed
      - BUILD=0
      - COMMIT=0
      - CONFIGS=0
      - CONTAINERS=1 # Traefik, Portainer, etc.
      - DISTRIBUTION=0
      - EXEC=0
      - IMAGES=1 # Portainer
      - INFO=1 # Portainer
      - NETWORKS=1 # Portainer
      - NODES=0
      - PLUGINS=0
      - SERVICES=1 # Portainer
      - SESSION=0
      - SWARM=0
      - SYSTEM=0
      - TASKS=1 # Portainer
      - VOLUMES=1 # Portainer

  <name>_socket_proxy:
    # a custom network that all docker socket requests are routed through
    name: <name>_socket_proxy
    driver: bridge
    ipam:
      config:
        # replace the <TODO> with an iteration within the subnet
        # after doing that, add it to the firewall whitelist rules
        - subnet: "172.<TODO>.0.0/16"
          gateway: "172.<TODO>.0.1"
          ip_range: "172.<TODO>.0.0/16"